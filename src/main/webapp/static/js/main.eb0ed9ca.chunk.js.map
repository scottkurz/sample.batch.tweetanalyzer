{"version":3,"sources":["AppHelmet.js","ControlPanel.js","TweetCard.js","LoadCard.js","TweetContainer.js","App.js","registerServiceWorker.js","index.js"],"names":["AppHelmet","react_default","a","createElement","Helmet","defer","href","rel","type","integrity","crossorigin","charset","name","content","Component","ControlPanel","className","id","onClick","this","props","handleClick","value","TweetCard","tweet","style","key","popularity","creationDate","accountLocation","realName","screenName","textContent","imageUrl","alt","src","favoriteCount","retweetCount","sentiment","sentimentEmoji","sentimentScore","LoadCard","keygen","TweetContainer","tweets","map","src_TweetCard","src_LoadCard","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","category","getTweets","bind","assertThisInitialized","getTweetsEvent","_this2","fetch","then","response","json","i","length","push","setState","catch","err","console","log","e","_this3","target","src_AppHelmet","src_ControlPanel","src_TweetContainer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.eb0ed9ca.chunk.js","sourcesContent":["/*\n * Copyright 2018 International Business Machines Corp.\n * \n * See the NOTICE file distributed with this work for additional information\n * regarding copyright ownership. Licensed under the Apache License, \n * Version 2.0 (the \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { Component } from 'react';\nimport { Helmet } from \"react-helmet\";\nclass AppHelmet extends Component {\n\n    render() {\n        return (\n            <div>\n                <Helmet defer={false}>\n                    <link href=\"https://fonts.googleapis.com/css?family=Crimson+Text:400,400i,600,600i,700,700i|Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i\" rel=\"stylesheet\" />\n                    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://use.fontawesome.com/releases/v5.2.0/css/all.css\" integrity=\"sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ\" crossorigin=\"anonymous\" />\n                </Helmet>\n                <Helmet>                \n                    <meta charset=\"utf-8\" />\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n                    <title>IBM - TweetAnalyzer</title></Helmet>\n            </div>)\n    }\n}\nexport default AppHelmet; \n","/*\n * Copyright 2018 International Business Machines Corp.\n * \n * See the NOTICE file distributed with this work for additional information\n * regarding copyright ownership. Licensed under the Apache License, \n * Version 2.0 (the \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { Component } from 'react';\n\nclass ControlPanel extends Component {\n\n    render() {\n        return (\n            <section className=\"container control-panel\">\n                <button id=\"button-top-tweets\" onClick={this.props.handleClick} value=\"popularity\" ><i className=\"fas fa-fire\"> popular</i></button>\n                <button id=\"button-recent-tweets\" onClick={this.props.handleClick} value=\"recent\" ><i className=\"fas fa-clock\"> recent</i></button>\n            </section>)\n    }\n}\n\nexport default ControlPanel; \n","/*\n * Copyright 2018 International Business Machines Corp.\n * \n * See the NOTICE file distributed with this work for additional information\n * regarding copyright ownership. Licensed under the Apache License, \n * Version 2.0 (the \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { Component } from 'react';\nimport keygen from 'uuid/v4';\n\nclass TweetCard extends Component {\n\n    render() { \n        var tweet= this.props.tweet;\n        return ( <div style={this.props.style} key={tweet.key} className='tweet-box'>\n                        <div className='tweet-box-content'>\n                            <div className='tweet-popularity'>Popularity: {tweet.popularity}</div>\n                            <div className='tweet-creation-date'><i className='fab fa-twitter-square'></i> {tweet.creationDate} in {tweet.accountLocation}</div>\n                            <div className='tweet-status'>\n                                <div className='tweet-username'><i className='fas fa-user-circle'> {tweet.realName}  @{tweet.screenName}</i>:</div>\n                                <div className='tweet-text-content'>{tweet.textContent} </div>\n                                {tweet.imageUrl != null ?\n                                    <div className='tweet-image' ><img alt=\"\" src={tweet.imageUrl} /></div> : \"\"}\n                            </div>\n                            <div className='tweet-metadata'>\n                                <div className='tweet-metadata-buttons'>\n                                    <div className='tweet-metadata-favorites'><i className='fas fa-star'></i> {tweet.favoriteCount}</div>\n                                    <div className='tweet-metadata-retweets'><i className='fas fa-retweet'></i> {tweet.retweetCount}</div>\n                                </div>\n                                {/* <div className= 'tweet-metadata-hashtags'>Hashtag list: {tweet.hashtags}<br/><br/></div>  */}\n                                {tweet.sentiment != null ? <div className='tweet-metadata-emoji'>Sentiment: {tweet.sentiment.sentimentEmoji} {tweet.sentiment.sentimentScore}</div> : \"\"}\n                            </div>\n                        </div>\n                    </div>\n \n        )\n    }\n}\nexport default TweetCard; \n","/*\n * Copyright 2018 International Business Machines Corp.\n * \n * See the NOTICE file distributed with this work for additional information\n * regarding copyright ownership. Licensed under the Apache License, \n * Version 2.0 (the \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { Component } from 'react';\nimport keygen from 'uuid/v4';\n\nclass LoadCard extends Component {\n\n    render() {\n\n        return (<div key={keygen()} className='tweet-box' onClick={this.props.handleClick} value=\"load-more\" >\n            <div className='tweet-box-content'>\n                {/* <div className='load-tweets'>Load More Tweets</div> */}\n            </div>\n        </div>\n        )\n    }\n}\nexport default LoadCard; \n","/*\n * Copyright 2018 International Business Machines Corp.\n * \n * See the NOTICE file distributed with this work for additional information\n * regarding copyright ownership. Licensed under the Apache License, \n * Version 2.0 (the \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { Component } from 'react';\nimport keygen from 'uuid/v4';\nimport { Spring } from 'react-spring';\nimport { Transition } from 'react-spring';\nimport { Trail } from 'react-spring';\nimport TweetCard from './TweetCard';\nimport LoadCard from './LoadCard';\n\nclass TweetContainer extends Component {\n\n    render() {\n        var tweets = this.props.tweets;\n        return (\n            <section id=\"tweet-container\" className=\"container tweet-container\" >\n                {tweets.map(tweet => <TweetCard key ={tweet.key}tweet={tweet} />)}\n                <LoadCard handleClick={this.props.handleClick} />\n            </section>)\n    }\n}\nexport default TweetContainer;\n\n{/* <Trail from={{ opacity: 0 }} to={{ opacity: 1 }} keys={items.map(item => item.key)}>\n   {items.map(item => styles => <TweetCard style={styles}  tweet={item}/>)}\n     </Trail> */}\n","/*\n * Copyright 2018 International Business Machines Corp.\n * \n * See the NOTICE file distributed with this work for additional information\n * regarding copyright ownership. Licensed under the Apache License, \n * Version 2.0 (the \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { Component } from 'react';\nimport AppHelmet from \"./AppHelmet\";\nimport ControlPanel from \"./ControlPanel\"\nimport 'font-awesome/css/font-awesome.min.css';\nimport { Trail } from 'react-spring';\nimport keygen from 'uuid/v4';\n\nimport TweetContainer from './TweetContainer';\n// var FontAwesome = require('react-fontawesome');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tweets: [],\n      category: \"popularity\"\n    };\n\n    this.getTweets = this.getTweets.bind(this);\n    this.getTweetsEvent = this.getTweetsEvent.bind(this);\n  }\n\n  getTweets() {\n    var start = 0;\n    var end = 100;\n    fetch('http://localhost:9080/web/api/tweets/' + \"?from=\" + start + \"&to=\" + end + \"&orderBy=\" + this.state.category).then(response => {\n      return response.json();\n    }).then(json => {\n      var tweets = []\n      for (var i = 0; i < json.length; i++) {\n        json[i].key = keygen();\n        tweets.push(json[i]);\n      }\n      this.setState({ tweets: tweets });\n    }).catch(err => {\n      console.log(\"Something went wrong retrieving the json.\")\n    });\n  }\n  getTweetsEvent(e) {\n    // console.log(e.target.value)\n    this.setState({category: e.target.value},  () => {this.getTweets(this.state.category)});\n  }\n  componentDidMount() {\n    this.getTweets();\n  }\n  render() {\n    return (\n      <div className=\"App wrapper\">\n        <AppHelmet />\n        <div className=\"container page-container\">\n          <ControlPanel handleClick={this.getTweetsEvent} />\n\n          {/* <Trail from={{ opacity: 0 }} to={{ opacity: 1 }} keys={this.state.tweets.map(tweet => tweet.key)}> */}\n          <TweetContainer tweets={this.state.tweets} handleClick={this.getTweetsEvent} />\n          {/* </Trail> */}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*\n * Copyright 2018 International Business Machines Corp.\n * \n * See the NOTICE file distributed with this work for additional information\n * regarding copyright ownership. Licensed under the Apache License, \n * Version 2.0 (the \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\n * Copyright 2018 International Business Machines Corp.\n * \n * See the NOTICE file distributed with this work for additional information\n * regarding copyright ownership. Licensed under the Apache License, \n * Version 2.0 (the \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n * \n *   http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/App.css';\nimport './styles/reset.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}